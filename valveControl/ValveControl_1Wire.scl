
FUNCTION_BLOCK ValveControl_1_way
TITLE = 'Ventilsteuerung 1 Weg'
VERSION : '1.0'
AUTHOR : 'Daniel Caceres Lopez'
PURPOSE : 'Ventilsteuerung mit Statusüberwachung und Fehlermeldungen'

VAR_INPUT
    open: BOOL; //Eingang für das Öffnen des Ventils
    statusOpen: BOOL; //Rückmeldung Ventil geöffnet
    statusClose: BOOL; //Rückmeldung Ventil geschlossen
    estopOk: BOOL; // Status Not-Aus (TRUE: Not-Aus nicht ausgelöst, FALSE: Not-Aus ausgelöst)
END_VAR

VAR_OUTPUT
    y_open: BOOL; //Ausgang für das Öffnen des Ventils
    error: INT; //Ausgang für den Fehler
    errorText: STRING; //Ausgang für die Fehlerbeschreibung
END_VAR

VAR_TEMP
    t_open: BOOL; //Temporärer Ausgang für das Öffnen des Ventils

VAR 
    tonOpen: TON; //Zeitbaustein für die Überwachung des Öffnungsstatus
    tonClose: TON; //Zeitbaustein für die Überwachung des Schließstatus
END_VAR

BEGIN

// Initialisierung
y_open := FALSE;
error := 0; // Kein Fehler

//* Ansteuerung des Ventil
IF estopOk THEN // Not-Aus nicht ausgelöst
    IF open THEN // Öffnen
        t_open := TRUE;
    else
        t_open := FALSE;
    END_IF;
else // Not-Aus ausgelöst
    t_open := FALSE;
    error := 1; // Fehler: Not-Aus aktiv
END_IF;

// Ausgangssteuerung
y_open := t_open;


// Überwachung des Öffnungsstatus
tonOpen(IN:= t_open AND NOT statusOpen, PT:= T#1S);
IF tonOpen.Q THEN
    error := 2; // Fehler: Ventil öffnet nicht
END_IF;

// Überwachung des Schließstatus
tonClose(IN:= not t_open AND NOT statusClose, PT:= T#1S);
IF tonClose.Q THEN
    error := 3; // Fehler: Ventil schließt nicht
END_IF;

// Fehler: Ventilstatus unbekannt
IF not statusClose AND not statusOpen THEN
    error := 4; // Fehler: Ventilstatus unbekannt
END_IF;


// Fehlerausgabe in Textform
case error of
    1:
        errorText := 'Not-Aus aktiv';
    2:
        errorText := 'Ventil öffnet nicht';
    3:
        errorText := 'Ventil schließt nicht';
    4:
        errorText := 'Ventilstatus unbekannt';
    else
        errorText := 'Kein Fehler';
end_case;

END_FUNCTION
